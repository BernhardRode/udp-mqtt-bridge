name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

env:
  EXTENSION: ""

jobs:
  build:
    name: üõ†Ô∏è Build
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu]
        arch: [arm64]
        # os: [ubuntu, windows, macos]
        # arch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: false

      - name: Set file extension Windows
        if: ${{ matrix.os == 'windows' }}
        run: echo "EXTENSION=.exe" | Out-File -FilePath $env:GITHUB_ENV -Append # no need for -Encoding utf8

      - name: Build binary
        run: go build -o "out/udp-mtqq-bridge-${{ matrix.os }}-${{ matrix.arch }}${{ env.EXTENSION }}" ./cmd/main.go

      - name: Copy certs and configs
        if: ${{ matrix.os != 'windows' }}
        run: cp -r certs configs out

      - name: Copy certs and configs
        if: ${{ matrix.os == 'windows' }}
        run: xcopy certs configs out /E /I /Y

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: udp-mtqq-bridge-${{ matrix.os }}-${{ matrix.arch }}.zip
          path: out/**/*

  release:
    name: üöÄ Release
    # if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: googleapis/release-please-action@v4
        with:
          release-type: go

      # publish:
      #   name: üöÄ Publish
      #   # if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      #   needs:
      #     - build
      #   runs-on: ubuntu-latest
      #   steps:
      - name: Download artifacts
        # if: ${{ steps.create_release.outputs.release_created }}
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          merge-multiple: true

      - name: List artifacts
        run: ls -l ./artifacts

      - name: Upload Release Artifact
        uses: softprops/action-gh-release@v2
        # if: ${{ steps.create_release.outputs.release_created }}
        with:
          tag_name: v1.0.2
          files: artifacts/**/*
        # run: gh release upload v1.0.2 artifacts/udp-mtqq-bridge-*
        # ${{ steps.create_release.outputs.tag_name }}

name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - name: Build binary
        run: |
          GOARCH=${{ matrix.arch }} go build -o udp-mtqq-bridge-${{ matrix.os }}-${{ matrix.arch }} ./cmd/main.go

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: udp-mtqq-bridge-${{ matrix.os }}-${{ matrix.arch }}
          path: udp-mtqq-bridge-${{ matrix.os }}-${{ matrix.arch }}

  # build-wasm:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: 1.23

  #     - name: Build WASM binary
  #       run: |
  #         GOARCH=wasm GOOS=js go build -o udp-mtqq-bridge.wasm ./cmd/main.go

  #     - name: Upload WASM artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: udp-mtqq-bridge.wasm
  #         path: udp-mtqq-bridge.wasm

  release:
    needs:
      - build
      - build-wasm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: googleapis/release-please-action@v4
        with:
          release-type: go

      - name: Download artifacts
        if: ${{ steps.create_release.outputs.release_created }}
        uses: actions/download-artifact@v4
        with:
          name: udp-mtqq-bridge-*
          path: ./artifacts

      - name: Upload Release Artifact
        if: ${{ steps.create_release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ steps.create_release.outputs.tag_name }} udp-mtqq-bridge-*

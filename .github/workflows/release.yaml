name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

env:
  EXTENSION: ""

jobs:
  build:
    name: üõ†Ô∏è Build
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, windows, macos]
        arch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: false

      - name: Set file extension Windows
        if: ${{ matrix.os == 'windows' }}
        run: echo "EXTENSION=.exe" | Out-File -FilePath $env:GITHUB_ENV -Append # no need for -Encoding utf8

      - name: DEBUG Windows
        if: ${{ matrix.os == 'windows' }}
        run: echo $env:EXTENSION

      - name: DEBUG Windows
        if: ${{ matrix.os == 'windows' }}
        run: echo ${{ env.EXTENSION }}

      - name: DEBUG Unix
        if: ${{ matrix.os != 'windows' }}
        run: echo "$EXTENSION"

      - name: Build binary
        run: go build -o "out/udp-mtqq-bridge-${{ matrix.os }}-${{ matrix.arch }}${{ env.EXTENSION }}" ./cmd/main.go

      - name: DEBUG Windows
        if: ${{ matrix.os == 'windows' }}
        run: dir out

      - name: DEBUG Linux
        if: ${{ matrix.os != 'windows' }}
        run: ls out

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: udp-mtqq-bridge-${{ matrix.os }}-${{ matrix.arch }}
          path: out/udp-mtqq-bridge-${{ matrix.os }}-${{ matrix.arch }}${{ env.EXTENSION }}

  configs:
    name: ‚öôÔ∏è Configurations
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: configs
          path: configs
          if-no-files-found: "ignore"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: certs
          path: certs
          if-no-files-found: "ignore"

  release:
    name: üöÄ Release
    needs:
      - configs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: googleapis/release-please-action@v4
        with:
          release-type: go

      - name: Download artifacts
        if: ${{ steps.create_release.outputs.release_created }}
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Upload Release Artifact
        if: ${{ steps.create_release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ steps.create_release.outputs.tag_name }} ./artifacts/*
